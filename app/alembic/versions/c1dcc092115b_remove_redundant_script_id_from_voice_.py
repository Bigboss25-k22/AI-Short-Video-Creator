"""remove redundant script_id from voice_audios

Revision ID: c1dcc092115b
Revises: 11db9f67d051
Create Date: 2025-06-06 03:31:54.825823

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c1dcc092115b'
down_revision: Union[str, None] = '11db9f67d051'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create enum type first
    userrole = postgresql.ENUM('ADMIN', 'USER', name='userrole')
    userrole.create(op.get_bind())
    
    # Remove default value first
    op.execute("ALTER TABLE users ALTER COLUMN role DROP DEFAULT")
    
    # Update role column with USING clause
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE userrole USING role::userrole")
    
    # Set new default value
    op.execute("ALTER TABLE users ALTER COLUMN role SET DEFAULT 'USER'::userrole")
    
    # Other changes
    op.alter_column('refresh_tokens', 'token',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('refresh_tokens', 'expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('refresh_tokens', 'user_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.drop_constraint('refresh_tokens_token_key', 'refresh_tokens', type_='unique')
    op.create_index(op.f('ix_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=True)
    op.alter_column('scene_images', 'scene_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.alter_column('scenes', 'script_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.drop_column('users', 'is_superuser')
    op.alter_column('voice_audios', 'scene_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.drop_constraint('voice_audios_script_id_fkey', 'voice_audios', type_='foreignkey')
    op.drop_column('voice_audios', 'script_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('voice_audios', sa.Column('script_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
    op.create_foreign_key('voice_audios_script_id_fkey', 'voice_audios', 'video_scripts', ['script_id'], ['id'])
    op.alter_column('voice_audios', 'scene_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    
    # Remove default value first
    op.execute("ALTER TABLE users ALTER COLUMN role DROP DEFAULT")
    
    # Convert back to VARCHAR
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE VARCHAR(20) USING role::VARCHAR")
    
    # Set old default value
    op.execute("ALTER TABLE users ALTER COLUMN role SET DEFAULT 'user'::VARCHAR")
    
    op.alter_column('users', 'full_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('scenes', 'script_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.alter_column('scene_images', 'scene_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.drop_index(op.f('ix_refresh_tokens_token'), table_name='refresh_tokens')
    op.create_unique_constraint('refresh_tokens_token_key', 'refresh_tokens', ['token'], postgresql_nulls_not_distinct=False)
    op.alter_column('refresh_tokens', 'user_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.alter_column('refresh_tokens', 'expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('refresh_tokens', 'token',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    
    # Drop enum type
    userrole = postgresql.ENUM(name='userrole')
    userrole.drop(op.get_bind())
    # ### end Alembic commands ###
